/* Local variables - using regular classes instead of :root */
.container {
  --primary-color: #d32f2f;
  --secondary-color: #b71c1c;
  --background-dark: rgba(25, 0, 0, 0.7);
  --foreground: #ffffff;
  --input-border: rgba(255, 0, 0, 0.3);
  --input-border-focus: rgba(255, 0, 0, 0.6);
  
  position: relative;
  width: 100%;
  min-height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 2rem 1rem;
  z-index: 1;
  background-color: #000000;
  isolation: isolate;
  box-sizing: border-box;
  margin: 0;
  border: none;
}

.title {
  font-size: 3rem;
  font-weight: bold;
  color: white;
  text-align: center;
  margin-bottom: 2.5rem;
  text-shadow: 0 0 10px #d32f2f;
  letter-spacing: 2px;
}

.kickLock {
  color: #d32f2f;
  font-family: 'Bungee', cursive;
  font-weight: 400;
  position: relative;
  display: inline-block;
}

.formContainer {
  width: 100%;
  max-width: 800px;
  margin-bottom: 1.5rem;
  background: rgba(10, 10, 10, 0.85);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 12px;
  padding: 1.5rem;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5), 0 0 15px rgba(255, 0, 0, 0.3);
  border: 1px solid rgba(255, 0, 0, 0.5);
  transition: all 0.3s ease;
  position: relative;
}

.formContainer:hover {
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.8), 0 0 20px rgba(255, 0, 0, 0.6);
  transform: translateY(-5px);
}

.logoutButton {
  position: fixed !important;
  top: 20px !important;
  right: 20px !important;
  background: linear-gradient(135deg, #d32f2f, #b71c1c);
  transition: all 0.3s ease;
  z-index: 1000;
  padding: 10px 20px;
  min-width: auto;
  box-shadow: 0 0 15px rgba(255, 0, 0, 0.5), inset 0 1px 0 rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  font-weight: bold;
  letter-spacing: 0.5px;
  border: 1px solid rgba(255, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  color: white;
  margin: 0;
  left: auto;
  bottom: auto;
}

.logoutButton:hover {
  background: linear-gradient(135deg, #b71c1c, #d32f2f);
  transform: translateY(-2px) scale(1.05);
  box-shadow: 0 4px 20px rgba(204, 0, 0, 0.7), 0 0 0 1px rgba(255, 0, 0, 0.5), 0 0 30px rgba(255, 0, 0, 0.3);
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
}

.logoutButton::before {
  content: '‚ü≤';
  font-size: 14px;
  margin-right: 2px;
}

/* Tab styles */
.tabsContainer {
  display: flex;
  justify-content: space-between;
  padding-left: 2rem;
  padding-right: 2rem;
  margin-bottom: 1.5rem;
  border-bottom: 1px solid rgba(255, 0, 0, 0.2);
  padding-bottom: 0.5rem;
}

.tabButton {
  background: rgba(0, 0, 0, 0.6);
  color: rgba(255, 255, 255, 0.7);
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 8px 8px 0 0;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 500;
  position: relative;
  overflow: hidden;
  border-bottom: 1px solid rgba(255, 0, 0, 0.5);
}

.tabButton:hover {
  background: rgba(255, 0, 0, 0.1);
  color: white;
}

.activeTab {
  background: #d32f2f;
  color: #ffffff;
  box-shadow: 0 0 10px rgba(255, 0, 0, 0.5);
}

.activeTab::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(to right, #d32f2f, #b71c1c);
}

.formContent {
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.form {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
  max-width: 900px;
  margin: 0 auto;
  padding: 1rem;
}

.buttonGroup {
  grid-column: 1 / -1;
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-top: 1rem;
}

@media (max-width: 768px) {
  .form {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .tabsContainer {
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .tabButton {
    flex: 1;
    min-width: 80px;
    font-size: 0.9rem;
    padding: 0.4rem 0.6rem;
  }
}

@media (max-width: 480px) {
  .form {
    grid-template-columns: 1fr;
  }
  
  .buttonGroup {
    flex-direction: column;
  }
  
  .title {
    font-size: 2.2rem;
  }
}

/* CRITICAL FIX - Enhanced input styling to prevent autofill color issues */
.input {
  padding: 0.75rem 1rem;
  background-color: rgba(25, 0, 0, 0.7) !important;
  border: 1px solid rgba(255, 0, 0, 0.3);
  border-radius: 8px;
  color: white !important;
  font-size: 0.9rem;
  transition: all 0.3s;
  width: 100%;
  -webkit-text-fill-color: white !important;
  -webkit-box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
  box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
  caret-color: white !important;
}

.input:focus {
  outline: none !important;
  border-color: rgba(255, 0, 0, 0.6) !important;
  background-color: rgba(25, 0, 0, 0.7) !important;
  -webkit-box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
  box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
}

.input::placeholder {
  color: rgba(255, 255, 255, 0.5) !important;
  opacity: 1 !important;
}

/* Handle autofill specifically */
.input:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
  -webkit-text-fill-color: white !important;
  box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
  background-color: rgba(25, 0, 0, 0.7) !important;
  color: white !important;
}

.input:-webkit-autofill:hover,
.input:-webkit-autofill:focus,
.input:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
  -webkit-text-fill-color: white !important;
  box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
  background-color: rgba(25, 0, 0, 0.7) !important;
  color: white !important;
  background-image: none !important;
  transition-property: background-color, box-shadow !important;
  transition-delay: 5000s !important;
}

/* Force override browser's native styling */
.input[type="text"],
.input[type="text"]:focus {
  background-color: rgba(25, 0, 0, 0.7) !important;
  -webkit-box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
  box-shadow: 0 0 0 1000px rgba(25, 0, 0, 0.7) inset !important;
}

.timeInput {
  width: 100%;
  font-family: 'Courier New', monospace;
  letter-spacing: 1px;
}

.button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background: #d32f2f;
  color: #ffffff;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s;
  font-weight: 500;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 0, 0, 0.2);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  min-width: 100px;
}

.button:hover {
  background: #b71c1c;
}

.button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to right,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  transition: all 0.6s;
}

.button:hover::before {
  left: 100%;
}

.button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.loadingButton {
  position: relative;
  overflow: hidden;
}

.loadingButton::after {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 300%;
  height: 100%;
  background: linear-gradient(
    to right,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  animation: loading 1.5s infinite;
}

.buttonRunning {
  background-color: #22c55e !important;
}

.buttonStopped {
  background-color: #dc2626 !important;
}

.buttonUpdated {
  background-color: #3b82f6 !important;
}

@keyframes loading {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(100%);
  }
}

/* Override styles for Firefox if needed */
.firefoxOverride.input {
  background-color: rgba(25, 0, 0, 0.7) !important;
  color: white !important;
}

/* Additional specificity for browser overrides */
.webkitOverride.input,
.webkitOverride.input:focus {
  background-color: rgba(25, 0, 0, 0.7) !important;
}